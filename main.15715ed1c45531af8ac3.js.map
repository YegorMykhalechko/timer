{"version":3,"sources":["webpack:///./index.js","webpack:///./js/classTimer.js"],"names":["timer","selector","targetDate","this","document","querySelector","start","id","setInterval","currentTime","Date","now","time","secs","Math","floor","mins","hours","days","updateTimerSecs","updateTimerMins","updateTimerHours","updateTimerDays","stop","clearInterval","updateModal","modal","classList","add","modalClose","remove","addEventListener","window","removeEventListener","textContent"],"mappings":"uIAIMA,EAAQ,I,WCFV,cAAsC,IAAxBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,WACpBC,KAAKF,SAAWG,SAASC,cAAcJ,GACvCE,KAAKD,WAAaA,E,2BAEtBI,MAAA,WAAQ,WACJH,KAAKI,GAAKC,aAAY,WAClB,IAAMC,EAAcC,KAAKC,MACnBC,EAAO,EAAKV,WAAaO,EACzBI,EAAOC,KAAKC,MAAOH,EAAO,IAAe,KACzCI,EAAOF,KAAKC,MAAOH,EAAO,KAAR,KAClBK,EAAQH,KAAKC,MAAOH,EAAO,MAAR,MACnBM,EAAOJ,KAAKC,MAAMH,EAAO,OAC/B,EAAKO,gBAAgBN,GACrB,EAAKO,gBAAgBJ,GACrB,EAAKK,iBAAiBJ,GACtB,EAAKK,gBAAgBJ,KACtB,M,EAGPK,KAAA,WACI,IAAMd,EAAcC,KAAKC,MACrBF,IAAgBN,KAAKD,aACrBsB,cAAcrB,KAAKI,IACnBJ,KAAKgB,gBAAgB,MACrBhB,KAAKiB,gBAAgB,MACrBjB,KAAKkB,iBAAiB,MACtBlB,KAAKmB,gBAAgB,OAGrBb,EAAcN,KAAKD,aACnBsB,cAAcrB,KAAKI,IACnBJ,KAAKgB,gBAAgB,MACrBhB,KAAKiB,gBAAgB,MACrBjB,KAAKkB,iBAAiB,MACtBlB,KAAKmB,gBAAgB,MACrBnB,KAAKsB,gB,EAIbA,YAAA,WACI,IAAMC,EAAQtB,SAASC,cAAc,aACrCqB,EAAMC,UAAUC,IAAI,WACLxB,SAASC,cAAc,qBAAtC,IACMwB,EAAa,kBAAMH,EAAMC,UAAUG,OAAO,YACrC1B,SAAS2B,iBAAiB,QAASF,GAC9CG,OAAOC,oBAAoB,QAASJ,I,EAGxCV,gBAAA,SAAgBP,GACCR,SAASC,cAAc,uBAC/B6B,YAActB,G,EAGvBQ,gBAAA,SAAgBR,GACCR,SAASC,cAAc,uBAC/B6B,YAActB,G,EAGvBS,iBAAA,SAAiBT,GACCR,SAASC,cAAc,wBAC/B6B,YAActB,G,EAGxBU,gBAAA,SAAgBV,GACCR,SAASC,cAAc,uBAC/B6B,YAActB,G,KD/Db,CAAmB,CAC7BX,SAAU,WACVC,WAAY,IAAIQ,KAAK,kBAEzBV,EAAMM,QACNN,EAAMuB,S","file":"main.15715ed1c45531af8ac3.js","sourcesContent":["'use strict'\r\nimport './styles.css';\r\nimport CountdownTimer from './js/classTimer.js';\r\n\r\nconst timer = new CountdownTimer({\r\n    selector: '#timer-1',\r\n    targetDate: new Date('Apr 15, 2021'),\r\n});\r\ntimer.start();\r\ntimer.stop();\r\n\r\n\r\n\r\n","'use strict'\r\nexport default class CountdownTimer {\r\n    constructor({ selector, targetDate }) {\r\n        this.selector = document.querySelector(selector);\r\n        this.targetDate = targetDate;\r\n    };\r\n    start() {\r\n        this.id = setInterval(() => {\r\n            const currentTime = Date.now();\r\n            const time = this.targetDate - currentTime;\r\n            const secs = Math.floor((time % (1000 * 60)) / 1000);\r\n            const mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\r\n            const hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\r\n            const days = Math.floor(time / (1000 * 60 * 60 * 24));\r\n            this.updateTimerSecs(secs);\r\n            this.updateTimerMins(mins);\r\n            this.updateTimerHours(hours);\r\n            this.updateTimerDays(days);\r\n        }, 1000);\r\n    };\r\n\r\n    stop() {\r\n        const currentTime = Date.now();\r\n        if (currentTime === this.targetDate) {\r\n            clearInterval(this.id);\r\n            this.updateTimerSecs('00');\r\n            this.updateTimerMins('00');\r\n            this.updateTimerHours('00');\r\n            this.updateTimerDays('00');\r\n        };\r\n\r\n        if (currentTime > this.targetDate) {\r\n            clearInterval(this.id);\r\n            this.updateTimerSecs('00');\r\n            this.updateTimerMins('00');\r\n            this.updateTimerHours('00');\r\n            this.updateTimerDays('00');\r\n            this.updateModal();\r\n        };\r\n    };\r\n\r\n    updateModal() {\r\n        const modal = document.querySelector('.lightbox');\r\n        modal.classList.add('is-open');\r\n        let btnClose = document.querySelector('.lightbox__button');\r\n        const modalClose = () => modal.classList.remove('is-open');\r\n        btnClose = document.addEventListener('click', modalClose);\r\n        window.removeEventListener('click', modalClose);\r\n    };\r\n\r\n    updateTimerSecs(time) {\r\n        const secs = document.querySelector('[data-value=\"secs\"]');\r\n        secs.textContent = time;\r\n    };\r\n\r\n    updateTimerMins(time) {\r\n        const mins = document.querySelector('[data-value=\"mins\"]');\r\n        mins.textContent = time;\r\n    };\r\n\r\n    updateTimerHours(time) {\r\n        const hours = document.querySelector('[data-value=\"hours\"]');\r\n        hours.textContent = time;\r\n    };\r\n\r\n    updateTimerDays(time) {\r\n        const days = document.querySelector('[data-value=\"days\"]');\r\n        days.textContent = time;\r\n    };\r\n};"],"sourceRoot":""}